name: .NET Framework WPF build

on:
    push:
        branches: [ master ]
    pull_request:
        branches: [ master ]

jobs:
    build:
        runs-on: windows-latest

        steps:
            # https://github.com/actions/checkout
            # This action checks-out your repository under $GITHUB_WORKSPACE, so your workflow can access it.
            - name: Checkout repository
              uses: actions/checkout@v3

            # https://github.com/microsoft/setup-msbuild
            # This action will help discover where the MSBuild tool is and automatically
            # add it to the PATH environment variables for you so future steps in your Actions 
            # workflow can just initiate msbuild commands without knowing the full path.
            - name: Setup MSBuild & add to PATH
              uses: microsoft/setup-msbuild@v1.1

            # https://github.com/darenm/Setup-VSTest
            # This action sets up VSTest.console.exe as a CLI tool for use in actions by:
            #    - optionally downloading and caching a version of VSWhere.exe to help find the latest VSTest.console.exe on the machine
            #    - Adds the location of the VSTest.console.exe to the PATH
            - name: Setup VSTest
              uses: https://github.com/darenm/Setup-VSTest

            # https://github.com/NuGet/setup-nuget
            # This action downloads and installs a given version of NuGet.exe.
            # Using this action will add nuget to your $PATH on all operating systems, 
            # including macOS and linux, without having to prefix it with mono.
            - name: Setup NuGet
              uses: nuget/setup-nuget@v1
              with:
                  nuget-version: '6.6'
            
            # Changes the active directory to the workspace directory created by actions/checkout@v3
            - name: Navigate to workspace
              run: cd $GITHUB_WORKSPACE

            # Restore all NuGet packages using the top-level solution
            - name: NuGet package restore
              run: nuget restore NVRAMTuner.sln

            # Build the Release configuration of the solution using MSBuild
            - name: Build Release configuration
              run: msbuild NVRAMTuner.sln /p:platform="Any CPU" /p:configuration="Release"

            # Run the unit test .dll from NVRAMTuner's test release directory
            - name: Run unit tests
              run: vstest.console .\NVRAMTuner.Test\bin\Release\NVRAMTuner.Test.dll
              